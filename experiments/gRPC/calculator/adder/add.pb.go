// Code generated by protoc-gen-go. DO NOT EDIT.
// source: add.proto

/*
Package adder is a generated protocol buffer package.

It is generated from these files:
	add.proto

It has these top-level messages:
	Operands
	Response
*/
package adder

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Operands struct {
	A uint64 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B uint64 `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
}

func (m *Operands) Reset()                    { *m = Operands{} }
func (m *Operands) String() string            { return proto.CompactTextString(m) }
func (*Operands) ProtoMessage()               {}
func (*Operands) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Operands) GetA() uint64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Operands) GetB() uint64 {
	if m != nil {
		return m.B
	}
	return 0
}

type Response struct {
	Result uint64 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetResult() uint64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Operands)(nil), "adder.Operands")
	proto.RegisterType((*Response)(nil), "adder.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Addition service

type AdditionClient interface {
	Add(ctx context.Context, in *Operands, opts ...grpc.CallOption) (*Response, error)
}

type additionClient struct {
	cc *grpc.ClientConn
}

func NewAdditionClient(cc *grpc.ClientConn) AdditionClient {
	return &additionClient{cc}
}

func (c *additionClient) Add(ctx context.Context, in *Operands, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/adder.addition/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Addition service

type AdditionServer interface {
	Add(context.Context, *Operands) (*Response, error)
}

func RegisterAdditionServer(s *grpc.Server, srv AdditionServer) {
	s.RegisterService(&_Addition_serviceDesc, srv)
}

func _Addition_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Operands)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adder.addition/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionServer).Add(ctx, req.(*Operands))
	}
	return interceptor(ctx, in, info, handler)
}

var _Addition_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adder.addition",
	HandlerType: (*AdditionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Addition_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "add.proto",
}

func init() { proto.RegisterFile("add.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x4c, 0x49, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0x4c, 0x49, 0x49, 0x2d, 0x52, 0x52, 0xe3, 0xe2,
	0xf0, 0x2f, 0x48, 0x2d, 0x4a, 0xcc, 0x4b, 0x29, 0x16, 0xe2, 0xe1, 0x62, 0x4c, 0x94, 0x60, 0x54,
	0x60, 0xd4, 0x60, 0x09, 0x62, 0x4c, 0x04, 0xf1, 0x92, 0x24, 0x98, 0x20, 0xbc, 0x24, 0x25, 0x25,
	0x2e, 0x8e, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4,
	0xe2, 0xd2, 0x9c, 0x12, 0xa8, 0x62, 0x28, 0xcf, 0xc8, 0x94, 0x8b, 0x23, 0x31, 0x25, 0x25, 0xb3,
	0x24, 0x33, 0x3f, 0x4f, 0x48, 0x93, 0x8b, 0xd9, 0x31, 0x25, 0x45, 0x88, 0x5f, 0x0f, 0x6c, 0x8d,
	0x1e, 0xcc, 0x0e, 0x29, 0x98, 0x00, 0xcc, 0x30, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x83, 0x8c, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x35, 0xb3, 0x20, 0x9d, 0x00, 0x00, 0x00,
}
